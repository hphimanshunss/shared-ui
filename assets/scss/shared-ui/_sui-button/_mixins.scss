@use 'sass:map';
@use '../mixins/bem' as *;

@mixin button-theme($palette, $prefix: '') {

	@each $colour, $state in $palette {

		$name: $colour;

		@if $prefix != '' {
			$name: $prefix + '-' + $colour;

			@if $colour == 'grey' {
				$name: $prefix;
			}
		}

		@include modifier($name) {
			@if map.has-key($palette, $colour, static) {
				@if map.has-key($palette, $colour, static, border) {
					border-color: map.get($palette, $colour, static, border);
				}
				@if map.has-key($palette, $colour, static, background) {
					background: map.get($palette, $colour, static, background);
				}
				@if map.has-key($palette, $colour, static, color) {
					color: map.get($palette, $colour, static, color);
				}
			}

			@if map.has-key($palette, $colour, hover) {
				&:hover {
					@if map.has-key($palette, $colour, hover, border) {
						border-color: map.get($palette, $colour, hover, border);
					}
					@if map.has-key($palette, $colour, hover, background) {
						background: map.get($palette, $colour, hover, background);
					}
					@if map.has-key($palette, $colour, hover, color) {
						color: map.get($palette, $colour, hover, color);
					}
				}
			}

			@if map.has-key($palette, $colour, focus) {
				&:focus {
					@if map.has-key($palette, $colour, focus, border) {
						border-color: map.get($palette, $colour, focus, border);
						outline-color: map.get($palette, $colour, focus, border);
					}
					@if map.has-key($palette, $colour, focus, background) {
						background: map.get($palette, $colour, focus, background);
					}
					@if map.has-key($palette, $colour, focus, color) {
						color: map.get($palette, $colour, focus, color);
					}
				}
			}
		}
	}
}