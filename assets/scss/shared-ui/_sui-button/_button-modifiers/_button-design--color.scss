@use 'sass:map';

@use '../../_mixins/bem' as *;
@use '../../_mixins/body-class' as *;
@use '../_button-themes/button-themes' as sui-button--palette;
@use '../_button-utilities/build-theme' as sui-button--tool;

/// Build component icon styles.
/// @author WPMU DEV
/// @param {String} $block - Main block name
@mixin button-design--color($block) {

	// Multicoloured.
	@include body-class($wrap: true, $rtl: false, $monochrome: false) {

		@include block($block) {

			// Build text button.
			@include sui-button--tool.button-theme-constructor(block, sui-button--palette.$button-theme-text);

			// Build solid button.
			@include sui-button--tool.button-theme-constructor(modifier, sui-button--palette.$button-theme-solid, 'solid');

			// Build light button.
			@include sui-button--tool.button-theme-constructor(modifier, sui-button--palette.$button-theme-light, 'light');

			// Build ghost button.
			@include sui-button--tool.button-theme-constructor(modifier, sui-button--palette.$button-theme-ghost, 'ghost');

			// Build disabled button.
			@include sui-button--tool.button-build-state-disabled(sui-button--palette.$button-theme-text, 'grey');

		}

		// Build disabled button when container is disabled.
		*[disabled],
		*:disabled,
		*.disabled {

			@include block($block) {
				@include sui-button--tool.button-build-state-disabled(sui-button--palette.$button-theme-text, 'grey', false);
			}
		}
	}

	// Monochrome.
	@include body-class($wrap: true, $rtl: false, $monochrome: true) {

		@include block($block) {

			// Build text button.
			@include sui-button--tool.button-theme-constructor(block, sui-button--palette.$button-theme-text, null, true);

			// Build solid button.
			@include sui-button--tool.button-theme-constructor(modifier, sui-button--palette.$button-theme-solid, 'solid', true);

			// Build light button.
			@include sui-button--tool.button-theme-constructor(modifier, sui-button--palette.$button-theme-light, 'light', true);

			// Build ghost button.
			@include sui-button--tool.button-theme-constructor(modifier, sui-button--palette.$button-theme-ghost, 'ghost', true);

			// Build disabled button.
			@include sui-button--tool.button-build-state-disabled(sui-button--palette.$button-theme-text, 'black');

		}

		// Build disabled button when container is disabled.
		*[disabled],
		*:disabled,
		*.disabled {

			@include block($block) {
				@include sui-button--tool.button-build-state-disabled(sui-button--palette.$button-theme-text, 'black', false);
			}
		}
	}
}