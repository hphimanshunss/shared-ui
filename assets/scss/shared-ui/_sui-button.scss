@use 'sass:map';
@use './_mixins/bem' as *;
@use './_sui-button/button-elements' as component;
@use './_sui-button/button-themes' as palette;
@use './_sui-button/button-modifiers' as modifier;

$width--options: full;

$height--default: 30;
$height--options: 50, 60, 70;
$height--props: (
	line-height: 14
);

@include body-class($wrap: true, $rtl: false, $monochrome: false) {

	@include block('button') {
		// Button main styles.
		@include component.button-container($height--default);

		// Button elements.
		@include component.button-label();
		@include component.button-icon();
		@include component.button-loader();

		// Button modifiers.
		@include modifier.button-border-constructor(dashed);
		@include modifier.button-icon-constructor(leading);
		@include modifier.button-icon-constructor(trailing);
		@include modifier.button-state-constructor(loading);
		@include modifier.button-size-constructor(width, $width--options);
		@include modifier.button-size-constructor(height, $height--options, $height--props);
		@include modifier.button-theme-constructor(default, palette.$button-theme-text);
		@include modifier.button-theme-constructor(modifier, palette.$button-theme-solid, 'solid');
		@include modifier.button-theme-constructor(modifier, palette.$button-theme-light, 'light');
		@include modifier.button-theme-constructor(modifier, palette.$button-theme-ghost, 'ghost');
	}
}

@include body-class($wrap: true, $rtl: true, $monochrome: false) {

	@include block('button') {

		// MOD: Leading icon.
		@include modifier('icon-leading') {

			.sui-button__icon {
				margin-left: 5px;
				margin-right: 0;
			}
		}

		// MOD: Trailing icon.
		@include modifier('icon-trailing') {

			.sui-button__icon {
				margin-left: 0;
				margin-right: 5px;
			}
		}
	}
}